{"version":3,"file":"static/js/415.6932b051.chunk.js","mappings":"oMAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MAEf,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAASE,MAAO,CAACC,KAAMN,GAA5C,SAAwDG,EAAMI,SADvDJ,EAAMK,GAIlB,KAGN,C,kHCkBD,UA/Ba,WACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBJ,GAAW,GADK,UAEOK,EAAAA,EAAAA,MAFP,cAEVC,EAFU,yBAIOA,EAASC,OAJhB,OAIRrB,EAJQ,OAKdY,EAAYZ,EAAOsB,SALL,kDAOdN,EAAS,EAAD,IAPM,yBASdF,GAAW,GATG,6EAAH,qDAYfI,GACD,GAAE,KAGD,iCACE,wBAAI,mBACHL,GAAU,SAAC,IAAD,KAAa,SAAC,IAAD,CAAYb,OAAQW,IAE3CI,IAAS,0BAAI,+BAA6BA,EAAMQ,aAGtD,C,sJClCD,IAAMC,EAAU,mCACVC,EAAW,gCAEJN,EAAgB,WAC3B,OAAOO,MAAM,GAAD,OAAID,EAAJ,uCAA2CD,GACxD,EAEYG,EAAc,SAAAC,GACzB,OAAOF,MAAM,GAAD,OAAID,EAAJ,gCAAoCD,EAApC,kBAAqDI,GAClE,EAEYC,EAAoB,SAAAC,GAC/B,OAAOJ,MAAM,GAAD,OAAID,EAAJ,iBAAqBK,EAArB,oBAAwCN,GACrD,EAEYO,EAAY,SAAAD,GACvB,OAAOJ,MAAM,GAAD,OAAID,EAAJ,iBAAqBK,EAArB,4BAAgDN,GAC7D,EAEYQ,EAAe,SAAAF,GAC1B,OAAOJ,MAAM,GAAD,OAAID,EAAJ,iBAAqBK,EAArB,4BAAgDN,GAC7D,C,sBCrBD,SAASS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO3B,GAEP,YADAqB,EAAOrB,EAET,CAEI0B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MoviesList.jsx","pages/Home.jsx","services/fetchData.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\nconst location = useLocation()\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie}`} state={{from: location}}>{movie.title}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  )\n};\n","import Loader from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchTrending } from 'services/fetchData';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const response = await fetchTrending();\n      try {\n        const movies = await response.json();\n        setTrending(movies.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {loading ? <Loader /> : <MoviesList movies={trending} />}\n\n      {error && <h3>Oops, something went wrong: {error.message}</h3>}\n    </>\n  );\n};\n\nexport default Home;","const API_KEY = '9efd78fa8242429fba828d6622123fa4';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = () => {\n  return fetch(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MoviesList","movies","location","useLocation","map","movie","to","state","from","title","id","useState","trending","setTrending","loading","setLoading","error","setError","useEffect","fetchData","fetchTrending","response","json","results","message","API_KEY","BASE_URL","fetch","fetchMovies","query","fetchMovieDetails","movieId","fetchCast","fetchReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}