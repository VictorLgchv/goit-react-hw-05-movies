{"version":3,"file":"static/js/597.859503c3.chunk.js","mappings":"2OA+DA,UAzDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GAEX,IAAMI,EAAS,mCAAG,uGACOC,EAAAA,EAAAA,GAAUX,GADjB,cACVY,EADU,yBAIKA,EAASC,OAJd,OAIRC,EAJQ,OAKdV,EAAQU,EAAKX,MALC,kDAOdK,EAAS,EAAD,IAPM,yBASdF,GAAW,GATG,6EAAH,qDAYfI,GACD,GAAE,CAACV,KAGF,gCACGK,IAAW,SAAC,IAAD,KACZ,yBACIA,GACAF,EAAKY,OAAS,GACdZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACP,yBACE,4BACE,gBACEC,MAAO,GACPC,IACEF,EAAY,yCAC0BA,GAClCG,EAAAA,EAENC,IAAKN,IAENA,GACD,yBAAG,cAAYC,SAZVF,EADF,OAkBXZ,GAA2B,IAAhBF,EAAKY,SAChB,wBAAI,4CAGLR,IAAS,0BAAI,+BAA6BA,EAAMkB,aAGtD,C,sDC7DM,IAAMF,EACX,iH,sJCDF,IAAMG,EAAU,mCACVC,EAAW,gCAEJC,EAAgB,WAC3B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,uCAA2CD,GACxD,EAEYI,EAAc,SAAAC,GACzB,OAAOF,MAAM,GAAD,OAAIF,EAAJ,gCAAoCD,EAApC,kBAAqDK,GAClE,EAEYC,EAAoB,SAAAhC,GAC/B,OAAO6B,MAAM,GAAD,OAAIF,EAAJ,iBAAqB3B,EAArB,oBAAwC0B,GACrD,EAEYf,EAAY,SAAAX,GACvB,OAAO6B,MAAM,GAAD,OAAIF,EAAJ,iBAAqB3B,EAArB,4BAAgD0B,GAC7D,EAEYO,EAAe,SAAAjC,GAC1B,OAAO6B,MAAM,GAAD,OAAIF,EAAJ,iBAAqB3B,EAArB,4BAAgD0B,GAC7D,C,sBCrBD,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpC,GAEP,YADA8B,EAAO9B,EAET,CAEImC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Cast.jsx","components/defaultImg.jsx","services/fetchData.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/fetchData';\nimport Loader from './Loader/Loader';\nimport { defaultImg } from './defaultImg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchData = async () => {\n      const response = await fetchCast(movieId);\n\n      try {\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {!loading &&\n          cast.length > 0 &&\n          cast.map(({ id, name, character, profile_path }) => (\n            <li key={id}>\n              <div>\n                <img\n                  width={80}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                      : defaultImg\n                  }\n                  alt={name}\n                />\n                {name}\n                <p>Character: {character}</p>\n              </div>\n            </li>\n          ))}\n      </ul>\n      {!loading && cast.length === 0 && (\n        <h3>We have no info about cast of this film</h3>\n      )}\n\n      {error && <h3>Oops, something went wrong: {error.message}</h3>}\n    </>\n  );\n};\n\nexport default Cast;","export const defaultImg =\n  'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n","const API_KEY = '9efd78fa8242429fba828d6622123fa4';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = () => {\n  return fetch(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","cast","setCast","loading","setLoading","error","setError","useEffect","fetchData","fetchCast","response","json","data","length","map","id","name","character","profile_path","width","src","defaultImg","alt","message","API_KEY","BASE_URL","fetchTrending","fetch","fetchMovies","query","fetchMovieDetails","fetchReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}